services:
  db:
    #container_name: "${COMPOSE_PROJECT_NAME}-mysql"
    # image: mysql:8  # ‚úÖ Switched from mariadb to mysql:8 (multi-arch, includes mysqldump)
    image: mysql/mysql-server:8.0 #prevent arm issues on MacOs

    # Expose MySQL on custom port. Ensure ${IP} is set in your .env, or default to 127.0.0.1
    ports:
      - ${IP:-127.0.0.1}:3307:3306  # üîÅ Changed right-hand port from 3307 to 3306 (MySQL default)

    volumes:
      - db_data:/var/lib/mysql                       # ‚úÖ Persist MySQL data
      - ./init-db:/docker-entrypoint-initdb.d        # ‚úÖ Init SQL scripts on first boot only

    restart: always

    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: d3_articles  # ‚úÖ Only created on first run

    

    # üìù Improvement Tip:
    # To avoid relying on .env only, you can use `${VAR:-default}` fallback syntax.

  phpmyadmin:
    #container_name: "${COMPOSE_PROJECT_NAME}-phpmyadmin" 
    
    
    #overrides Docker‚Äôs automatic DNS naming. 
    #While service name DNS resolution will still work, it's often best to not override container_name unless necessary, to prevent ambiguity.



    depends_on:
      - db

    image: arm64v8/phpmyadmin  # ‚úÖ ARM-compatible image for Apple Silicon

    ports:
      - ${PHP_MY_ADMIN_PORT}:80

    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      UPLOAD_LIMIT: 500M
      MEMORY_LIMIT: 1010M
      MAX_EXECUTION_TIME: 100000
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}

  apache:
    container_name: "${COMPOSE_PROJECT_NAME}-apache"

    build:
      context: .
      dockerfile: Dockerfile  # ‚úÖ You can parameterize this if needed

    ports:
      - "8181:80"     # Prod
      - "8182:8182"   # Staging (via vhost)

    volumes:
      - ./prd:/var/www/prd
      - ./stg:/var/www/stg
      - ./input-data/prd.conf:/etc/apache2/sites-enabled/prd.conf
      - ./input-data/stg.conf:/etc/apache2/sites-enabled/stg.conf

    depends_on:
      - db

    restart: always

# ==========================================================
# VOLUMES
# ==========================================================
volumes:
  input-data:
  db_data:
  prd:
  stg:
